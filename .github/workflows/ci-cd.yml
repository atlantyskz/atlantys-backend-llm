name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.7
        options: --privileged
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Gateway Service image
      uses: docker/build-push-action@v4
      with:
        context: ./gateway_service
        file: ./gateway_service/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/gateway_service:latest

    - name: Build and push LLM Service image
      uses: docker/build-push-action@v4
      with:
        context: ./llm_service
        file: ./llm_service/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/llm_service:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to Remote Server
      run: |
        ssh -o StrictHostKeyChecking=no almalinux@${{ secrets.REMOTE_SERVER }} << EOF
          # Login to Docker Hub
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          
          # Pull the latest images
          docker pull ${{ secrets.DOCKER_USERNAME }}/gateway_service:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/llm_service:latest

          # Stop and remove old containers
          docker-compose -f /path/to/remote/docker-compose.yml down

          # Run new containers
          docker-compose -f /path/to/remote/docker-compose.yml up -d
        EOF
